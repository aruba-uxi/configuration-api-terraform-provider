/*
Configuration Api

Nice description goes here

API version: 1.11.0
Contact: support@capenetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_api_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the NetworkGroupAssignmentsItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkGroupAssignmentsItem{}

// NetworkGroupAssignmentsItem struct for NetworkGroupAssignmentsItem
type NetworkGroupAssignmentsItem struct {
	Uid        string `json:"uid"`
	GroupUid   string `json:"group_uid"`
	NetworkUid string `json:"network_uid"`
}

type _NetworkGroupAssignmentsItem NetworkGroupAssignmentsItem

// NewNetworkGroupAssignmentsItem instantiates a new NetworkGroupAssignmentsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkGroupAssignmentsItem(uid string, groupUid string, networkUid string) *NetworkGroupAssignmentsItem {
	this := NetworkGroupAssignmentsItem{}
	this.Uid = uid
	this.GroupUid = groupUid
	this.NetworkUid = networkUid
	return &this
}

// NewNetworkGroupAssignmentsItemWithDefaults instantiates a new NetworkGroupAssignmentsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkGroupAssignmentsItemWithDefaults() *NetworkGroupAssignmentsItem {
	this := NetworkGroupAssignmentsItem{}
	return &this
}

// GetUid returns the Uid field value
func (o *NetworkGroupAssignmentsItem) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *NetworkGroupAssignmentsItem) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *NetworkGroupAssignmentsItem) SetUid(v string) {
	o.Uid = v
}

// GetGroupUid returns the GroupUid field value
func (o *NetworkGroupAssignmentsItem) GetGroupUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupUid
}

// GetGroupUidOk returns a tuple with the GroupUid field value
// and a boolean to check if the value has been set.
func (o *NetworkGroupAssignmentsItem) GetGroupUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupUid, true
}

// SetGroupUid sets field value
func (o *NetworkGroupAssignmentsItem) SetGroupUid(v string) {
	o.GroupUid = v
}

// GetNetworkUid returns the NetworkUid field value
func (o *NetworkGroupAssignmentsItem) GetNetworkUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkUid
}

// GetNetworkUidOk returns a tuple with the NetworkUid field value
// and a boolean to check if the value has been set.
func (o *NetworkGroupAssignmentsItem) GetNetworkUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkUid, true
}

// SetNetworkUid sets field value
func (o *NetworkGroupAssignmentsItem) SetNetworkUid(v string) {
	o.NetworkUid = v
}

func (o NetworkGroupAssignmentsItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkGroupAssignmentsItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uid"] = o.Uid
	toSerialize["group_uid"] = o.GroupUid
	toSerialize["network_uid"] = o.NetworkUid
	return toSerialize, nil
}

func (o *NetworkGroupAssignmentsItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"uid",
		"group_uid",
		"network_uid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkGroupAssignmentsItem := _NetworkGroupAssignmentsItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkGroupAssignmentsItem)

	if err != nil {
		return err
	}

	*o = NetworkGroupAssignmentsItem(varNetworkGroupAssignmentsItem)

	return err
}

type NullableNetworkGroupAssignmentsItem struct {
	value *NetworkGroupAssignmentsItem
	isSet bool
}

func (v NullableNetworkGroupAssignmentsItem) Get() *NetworkGroupAssignmentsItem {
	return v.value
}

func (v *NullableNetworkGroupAssignmentsItem) Set(val *NetworkGroupAssignmentsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkGroupAssignmentsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkGroupAssignmentsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkGroupAssignmentsItem(val *NetworkGroupAssignmentsItem) *NullableNetworkGroupAssignmentsItem {
	return &NullableNetworkGroupAssignmentsItem{value: val, isSet: true}
}

func (v NullableNetworkGroupAssignmentsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkGroupAssignmentsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
