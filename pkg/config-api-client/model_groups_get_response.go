/*
Configuration Api

Nice description goes here

API version: 1.11.0
Contact: support@capenetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_api_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GroupsGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupsGetResponse{}

// GroupsGetResponse struct for GroupsGetResponse
type GroupsGetResponse struct {
	Pagination PaginationDetails `json:"pagination"`
	Groups     []GroupsGetItem   `json:"groups"`
}

type _GroupsGetResponse GroupsGetResponse

// NewGroupsGetResponse instantiates a new GroupsGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupsGetResponse(pagination PaginationDetails, groups []GroupsGetItem) *GroupsGetResponse {
	this := GroupsGetResponse{}
	this.Pagination = pagination
	this.Groups = groups
	return &this
}

// NewGroupsGetResponseWithDefaults instantiates a new GroupsGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupsGetResponseWithDefaults() *GroupsGetResponse {
	this := GroupsGetResponse{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *GroupsGetResponse) GetPagination() PaginationDetails {
	if o == nil {
		var ret PaginationDetails
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *GroupsGetResponse) GetPaginationOk() (*PaginationDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *GroupsGetResponse) SetPagination(v PaginationDetails) {
	o.Pagination = v
}

// GetGroups returns the Groups field value
func (o *GroupsGetResponse) GetGroups() []GroupsGetItem {
	if o == nil {
		var ret []GroupsGetItem
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *GroupsGetResponse) GetGroupsOk() ([]GroupsGetItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *GroupsGetResponse) SetGroups(v []GroupsGetItem) {
	o.Groups = v
}

func (o GroupsGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupsGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pagination"] = o.Pagination
	toSerialize["groups"] = o.Groups
	return toSerialize, nil
}

func (o *GroupsGetResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pagination",
		"groups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupsGetResponse := _GroupsGetResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupsGetResponse)

	if err != nil {
		return err
	}

	*o = GroupsGetResponse(varGroupsGetResponse)

	return err
}

type NullableGroupsGetResponse struct {
	value *GroupsGetResponse
	isSet bool
}

func (v NullableGroupsGetResponse) Get() *GroupsGetResponse {
	return v.value
}

func (v *NullableGroupsGetResponse) Set(val *GroupsGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupsGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupsGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupsGetResponse(val *GroupsGetResponse) *NullableGroupsGetResponse {
	return &NullableGroupsGetResponse{value: val, isSet: true}
}

func (v NullableGroupsGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupsGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
